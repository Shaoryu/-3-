#include "mbed.h"
#include "ps5_can_lib.h"
#include "rbms.h"


enum Ps5{
    NONE = -1,
    NO_PUSHED = 0,
    CHANGED = 1,
};

BufferedSerial pc(USBTX, USBRX, 9600);
CAN can1(PA_11, PA_12,1000000);
CAN can2(PB_12, PB_13,1000000);
CANMessage msg;
can920 ps5(can1, 1);
rbms motor(can2, 0, 3);

Thread thread_spd, thread_can;

int torque[3], speed[3];
int val;
int data[PS5::ALL_BUTTON], data_pre[PS5::ALL_BUTTON];
bool stop;
void speed_control();
void can_receive();

int main()
{
    can1.frequency(1000000);
    can1.mode(CAN::Normal);
    can2.frequency(1000000);
    can2.mode(CAN::Normal);
    ps5.setup(10);

    thread_spd.start(speed_control);
    thread_can.start(can_receive);
    ThisThread::sleep_for(100ms);
    while (true){
        val = ps5.get_data(data,&stop);
        if(val == 1){
            
        }else if(val == -1){
            
        }
    
        motor.rbms_send(torque);
        ThisThread::sleep_for(50ms);
    }
}

int Degree_to_Pulsewidth_us(int degree){
    int pulsewidth_us;
    pulsewidth_us = 500 + (degree * (2400 - 500) / 180);
    return pulsewidth_us;
}

